<?php

class LoginController
{
    private $model;

    public function __construct()
    {
        $this->model = new LoginModel(Database::conectar());
    }

    public function index()
    {
        ViewHelper::render('login/index');

    }
    public function recuperar()
    {
        include_once __DIR__ . '/../vista/login/recuperar.php';
    }
    public function enviar_recuperacion()
    {
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            SessionHelper::start();

            // CSRF Token
            if (!hash_equals($_SESSION['csrf_token'] ?? '', $_POST['csrf_token'] ?? '')) {
                $_SESSION['flash_message'] = 'Petici√≥n inv√°lida. Vuelve a intentarlo.';
                header('Location: ' . URL_BASE . '/login/recuperar');
                exit;
            }

            // Validaci√≥n de correo
            $email = filter_input(INPUT_POST, 'email', FILTER_SANITIZE_EMAIL);
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $_SESSION['flash_message'] = 'Correo no v√°lido.';
                header('Location: ' . URL_BASE . '/login/recuperar');
                exit;
            }

            // Aqu√≠ podr√≠as buscar el email en la base de datos, y si existe, generar y guardar token
            // Simulaci√≥n segura:
            $_SESSION['flash_message'] = 'Si el correo est√° registrado, recibir√°s instrucciones para restablecer tu contrase√±a.';

            // üîê (Opcional) log interno:
            error_log("Intento de recuperaci√≥n para: $email desde IP: " . $_SERVER['REMOTE_ADDR']);

            header('Location: ' . URL_BASE . '/login/recuperar');
            exit;
        }
    }

    public function validar()
    {

        SessionHelper::start();

        $nombre_usuario = ValidationHelper::limpiar($_POST['nombre_usuario'] ?? '');
        $clave_ingresada = ValidationHelper::limpiar($_POST['contrase√±a'] ?? '');

        // Validaciones adicionales
        if (!ValidationHelper::longitudMinima($nombre_usuario, 3)) {

            RedirectHelper::to(URL_BASE . '/login', '‚ö†Ô∏è El nombre de usuario es muy corto.');

        }

        if (!ValidationHelper::longitudMinima($clave_ingresada, 6)) {
            RedirectHelper::to(URL_BASE . '/login', '‚ö†Ô∏è La contrase√±a debe tener al menos 6 caracteres.');
        }

        $usuario = $this->model->obtenerUsuarioPorNombre($nombre_usuario);

        if ($usuario && password_verify($clave_ingresada, $usuario['contrase√±a'])) {
            SessionHelper::set('nombre_usuario', $usuario['nombre_usuario']);
            SessionHelper::set('nombre_completo', $usuario['nombre_completo']);
            SessionHelper::set('correo', $usuario['correo']); // ‚úÖ Agrega esta l√≠nea
            SessionHelper::set('rol', $usuario['rol']);


            RedirectHelper::to(URL_BASE . '/inicio');
            return;
        } else {

            RedirectHelper::to(URL_BASE . '/login', '‚ùå Usuario o contrase√±a incorrectos.');
        }

    }

    public function logout()
    {
        AuthHelper::logout(); // destruye la sesi√≥n y redirige al login
    }
}
